spring.aop.auto=true
# Whether subclass-based (CGLIB) proxies are to be created (true) as opposed to standard Java interface-based proxies (false).
spring.aop.proxy-target-class=true

# 应用程序多环境支持: dev、stag、prod（对应文件 application-{profile}.properties设置）
spring.profiles.active=local

server.port = 8115
spring.application.name=tt-trade-center

# logback日志配置,日志环境类型，服务名，级别
log.env.profile=dev
log.env.module=tt-trade-center
log.env.logger.level=info


#服务上下文配置，springboot 2.x推荐写法
server.servlet.context-path=/tt-trade-center

# mybatis-plus 配置
mybatis-plus.mapper-locations=classpath*:**/mapper/*Mapper.xml
mybatis-plus.configuration.map-underscore-to-camel-case=true
#逻辑删除配置
mybatis-plus.global-config.logic-delete-value=1
mybatis-plus.global-config.logic-not-delete-value=0
#id自动生成策略
mybatis-plus.global-config.db-config.id-type=uuid


# Service version
demo.service.version = 1.0.0

# Base packages to scan Dubbo Components (e.g @Service , @Reference)
dubbo.scan.basePackages  = com.deepexi.trade.service.impl

# Dubbo Config properties
dubbo.application.id = tt-trade-center
dubbo.application.name = tt-trade-center

dubbo.protocol.id = dubbo
dubbo.protocol.name = dubbo
dubbo.protocol.port = 28115
dubbo.provider.timeout = 5000

# 自定义异常处理过滤器，要用-exception删除默认的过滤器
dubbo.provider.filter=exceptionFilter,-exception

dubbo.registry.id = my-registry
dubbo.registry.address = zookeeper://127.0.0.1:2181

# elastic job
elasticJob.regCenter.serverList=203.195.136.11:2181
elasticJob.regCenter.namespace=tt-trade-center

#定时器执行时间
elasticJob.orderCloseScheduled.orderCloseCron=0 0/5 * * * ?
elasticJob.orderCloseScheduled.shardingTotalCount=1
elasticJob.orderCloseScheduled.shardingItemParameters=0=guangzhou
# 查询时间条件
elasticJob.orderCloseScheduled.closeTime = 30

# rocketmq
#deepexi.mq.messageRegistryVo.type = rocket
#deepexi.mq.messageRegistryVo.brokerList = 127.0.0.1:9876
#deepexi.mq.messageRegistryVo.groupName = CDP_WY_TRADE_CENTER

# rabbitmq
deepexi.mq.messageRegistryVo.type = rabbit
#单机使用
#deepexi.mq.messageRegistryVo.host = 203.195.136.11
#deepexi.mq.messageRegistryVo.port = 5672
#集群使用addresses:ip1:port1,ip2:port2,ip3:port3
deepexi.mq.messageRegistryVo.addresses = 203.195.136.11:5672
deepexi.mq.messageRegistryVo.username = admin
deepexi.mq.messageRegistryVo.password = 2Y6duAqbtS

#退款流水的topic名称
deepexi.mq.tcOrderRefundWater.topic=TC_ORDER_REFUND_WATER_DESTINATION
deepexi.mq.tcOrderRefundWater.routingKey=TC_ORDER_REFUND_WATER_ROUTINGKEY

spring.application.domainName = wo.deepexi.com

dingding.token=9e1d8175f2e81fdc1e1e0abc6501e7d68d29c15f2e88c3e4b823daa8031a69be

dlock.url=10.0.0.17:2181
# 缓存类型single(单点),sentinel(哨兵),cluster(集群)
redis.type=single
# 数据库，[0,15]之间，cluster模式下无效
redis.dbIndex=1
redis.addresses=203.195.136.11:6379
#redis.addresses=127.0.0.1:6379
redis.appSecret=PgN372k6*GA9NX6HD&
# 连接池
redis.maxTotal=10
redis.maxIdle=10
redis.maxWaitMillis=30000

#uat https://oapi.dingtalk.com/robot/send?access_token=611c3cd1d558dd1c42f3ef907f9dd44c74eb17e321dae33c60c64cbd49e251c0
#prod https://oapi.dingtalk.com/robot/send?access_token=6868cfcdbdc06f0a141158feca462639abab88b5dc02786e955f8b6a370292b5