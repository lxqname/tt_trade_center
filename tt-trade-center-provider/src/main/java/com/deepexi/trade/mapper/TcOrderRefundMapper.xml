<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--客户映射 指定到dao接口 -->
<mapper namespace="com.deepexi.trade.mapper.TcOrderRefundMapper">
    <sql id="Base_Column_List">
      id,      created_at,      created_by,      updated_at,      updated_by,      version,      dr,
      tenant_code,      order_id,      refund_status,      refund_no,      refund_amount,      refund_type,
      refund_time,refund_trans_no,refund_Operation_Type,refund_third_order_no  </sql>
    <select id="findList" resultType="com.deepexi.trade.domain.eo.TcOrderRefund">
        SELECT
        *
        FROM tc_order_refund t1 WHERE t1.dr=0

        <if test="eo.id != null  and eo.id != ''   ">
            AND t1.id = #{ eo.id ,jdbcType=VARCHAR }
        </if>
        <if test="eo.orderId != null  and eo.orderId != ''   ">
            AND t1.order_id = #{ eo.orderId ,jdbcType=VARCHAR }
        </if>
        <if test="eo.refundStatus != null  and eo.refundStatus != ''   ">
            AND t1.refund_status = #{ eo.refundStatus ,jdbcType=TINYINT }
        </if>
        <if test="eo.refundNo != null  and eo.refundNo != ''   ">
            AND t1.refund_no = #{ eo.refundNo ,jdbcType=VARCHAR }
        </if>
        <if test="eo.refundAmount != null  and eo.refundAmount != ''   ">
            AND t1.refund_amount = #{ eo.refundAmount ,jdbcType=DECIMAL }
        </if>
        <if test="eo.refundType != null  and eo.refundType != ''   ">
            AND t1.refund_type = #{ eo.refundType ,jdbcType=TINYINT }
        </if>
        <if test="eo.refundOperationType != null  and eo.refundOperationType != ''   ">
            AND t1.refund_operation_type = #{ eo.refundOperationType ,jdbcType=TINYINT }
        </if>
        <if test="eo.refundTime != null  and eo.refundTime != ''   ">
            AND t1.refund_time = #{ eo.refundTime ,jdbcType=TIMESTAMP }
        </if>
        <if test="eo.refundTransNo != null  and eo.refundTransNo != ''   ">
            AND t1.refund_trans_no = #{ eo.refundTransNo ,jdbcType=VARCHAR }
        </if>
        <if test="eo.refundThirdOrderNo != null  and eo.refundThirdOrderNo != ''   ">
            AND t1.refund_third_order_no = #{ eo.refundThirdOrderNo ,jdbcType=VARCHAR }
        </if>
        <if test="eo.tenantCode != null  and eo.tenantCode != ''   ">
            AND t1.tenant_code = #{ eo.tenantCode ,jdbcType=VARCHAR }
        </if>
        <if test="eo.createdAt != null  and eo.createdAt != ''   ">
            AND t1.created_at = #{ eo.createdAt ,jdbcType=TIMESTAMP }
        </if>
        <if test="eo.createdBy != null  and eo.createdBy != ''   ">
            AND t1.created_by = #{ eo.createdBy ,jdbcType=VARCHAR }
        </if>
        <if test="eo.updatedAt != null  and eo.updatedAt != ''   ">
            AND t1.updated_at = #{ eo.updatedAt ,jdbcType=TIMESTAMP }
        </if>
        <if test="eo.updatedBy != null  and eo.updatedBy != ''   ">
            AND t1.updated_by = #{ eo.updatedBy ,jdbcType=VARCHAR }
        </if>
        <if test="eo.version != null  and eo.version != ''   ">
            AND t1.version = #{ eo.version ,jdbcType=TINYINT }
        </if>
        <if test="eo.dr != null  and eo.dr != ''   ">
            AND t1.dr = #{ eo.dr ,jdbcType=TINYINT }
        </if>
        <if test="eo.count != null  and eo.count != ''   ">
            AND t1.count = #{ eo.count ,jdbcType=TINYINT }
        </if>
        <if test="eo.awardId != null  and eo.awardId != ''   ">
            AND t1.award_id = #{ eo.awardId ,jdbcType=VARCHAR }
        </if>
        <if test="eo.orderAwardId != null  and eo.orderAwardId != ''   ">
            AND t1.order_award_id = #{ eo.orderAwardId ,jdbcType=VARCHAR }
        </if>
        <if test="eo.remark1 != null  and eo.remark1 != ''   ">
            AND t1.remark1 = #{ eo.remark1 ,jdbcType=VARCHAR }
        </if>
        <if test="eo.remark2 != null  and eo.remark2 != ''   ">
            AND t1.remark2 = #{ eo.remark2 ,jdbcType=VARCHAR }
        </if>
        <if test="eo.remark3 != null  and eo.remark3 != ''   ">
            AND t1.remark3 = #{ eo.remark3 ,jdbcType=VARCHAR }
        </if>
        <if test="eo.remark4 != null  and eo.remark4 != ''   ">
            AND t1.remark4 = #{ eo.remark4 ,jdbcType=VARCHAR }
        </if>


        <choose>
            <when test="eo.orderBy != null and eo.orderBy !='' ">
                ORDER BY t1.${eo.orderBy}
            </when>
            <otherwise>
                ORDER BY t1.created_at DESC
            </otherwise>
        </choose>

    </select>


    <insert id="batchInsert">
        INSERT INTO tc_order_refund
        (
        id,
        order_id,
        refund_status,
        refund_no,
        refund_amount,
        refund_type,
        refund_operation_type,
        refund_time,
        refund_trans_no,
        refund_third_order_no,
        tenant_code,
        created_at,
        created_by,
        updated_at,
        updated_by,
        version,
        dr,
        count,
        award_id,
        order_award_id,
        remark1,
        remark2,
        remark3,
        remark4,
        )
        VALUES
        <foreach collection="eo" index="index" item="value" separator=",">
            (
            #{value.id},
            #{value.orderId},
            #{value.refundStatus},
            #{value.refundNo},
            #{value.refundAmount},
            #{value.refundType},
            #{value.refundOperationType},
            #{value.refundTime},
            #{value.refundTransNo},
            #{value.refundThirdOrderNo},
            #{value.tenantCode},
            #{value.createdAt},
            #{value.createdBy},
            #{value.updatedAt},
            #{value.updatedBy},
            #{value.version},
            #{value.dr},
            #{value.count},
            #{value.awardId},
            #{value.orderAwardId},
            #{value.remark1},
            #{value.remark2},
            #{value.remark3},
            #{value.remark4},
            )
        </foreach>
    </insert>
    <update id="batchUpdate">
        INSERT INTO tc_order_refund
        (
        id,
        order_id,
        refund_status,
        refund_no,
        refund_amount,
        refund_type,
        refund_operation_type,
        refund_time,
        refund_trans_no,
        refund_third_order_no,
        tenant_code,
        created_at,
        created_by,
        updated_at,
        updated_by,
        version,
        dr,
        count,
        award_id,
        order_award_id,
        remark1,
        remark2,
        remark3,
        remark4,
        )
        VALUES
        <foreach collection="eo" index="index" item="value" separator=",">
            (
            #{value.id},
            #{value.orderId},
            #{value.refundStatus},
            #{value.refundNo},
            #{value.refundAmount},
            #{value.refundType},
            #{value.refundOperationType},
            #{value.refundTime},
            #{value.refundTransNo},
            #{value.refundThirdOrderNo},
            #{value.tenantCode},
            #{value.createdAt},
            #{value.createdBy},
            #{value.updatedAt},
            #{value.updatedBy},
            #{value.version},
            #{value.dr},
            #{value.count},
            #{value.awardId},
            #{value.orderAwardId},
            #{value.remark1},
            #{value.remark2},
            #{value.remark3},
            #{value.remark4},
            )
        </foreach>
        ON DUPLICATE KEY UPDATE
        #{value.id},
        id=values(id),
        #{value.orderId},
        orderId=values(orderId),
        #{value.refundStatus},
        refundStatus=values(refundStatus),
        #{value.refundNo},
        refundNo=values(refundNo),
        #{value.refundAmount},
        refundAmount=values(refundAmount),
        #{value.refundType},
        refundType=values(refundType),
        #{value.refundOperationType},
        refundOperationType=values(refundOperationType),
        #{value.refundTime},
        refundTime=values(refundTime),
        #{value.refundTransNo},
        refundTransNo=values(refundTransNo),
        #{value.refundThirdOrderNo},
        refundThirdOrderNo=values(refundThirdOrderNo),
        #{value.tenantCode},
        tenantCode=values(tenantCode),
        #{value.createdAt},
        createdAt=values(createdAt),
        #{value.createdBy},
        createdBy=values(createdBy),
        #{value.updatedAt},
        updatedAt=values(updatedAt),
        #{value.updatedBy},
        updatedBy=values(updatedBy),
        #{value.version},
        version=values(version),
        #{value.dr},
        dr=values(dr),
        #{value.count},
        count=values(count),
        #{value.awardId},
        awardId=values(awardId),
        #{value.orderAwardId},
        orderAwardId=values(orderAwardId),
        #{value.remark1},
        remark1=values(remark1),
        #{value.remark2},
        remark2=values(remark2),
        #{value.remark3},
        remark3=values(remark3),
        #{value.remark4},
        remark4=values(remark4),
    </update>

    <update id="deleteByIds">
        UPDATE tc_order_refund set dr=1 where id in
        <foreach collection="pks" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>


</mapper>